// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Topo.Data;

#nullable disable

namespace Topo.Migrations
{
    [DbContext(typeof(TopoDBContext))]
    partial class TopoDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("Topo.Data.Models.Authentication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessToken")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ExpiresIn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("MemberName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TokenExpiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("TokenType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authentications");
                });

            modelBuilder.Entity("Topo.Data.Models.OASTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InputGroup")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InputGroupSort")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InputId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InputLabel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TemplateTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OASTemplates");
                });

            modelBuilder.Entity("Topo.Data.Models.OASWorksheetAnswers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InputId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InputLabel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InputSortIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InputTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InputTitleSortIndex")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("MemberAnswer")
                        .HasColumnType("TEXT");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OASWorksheetAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
